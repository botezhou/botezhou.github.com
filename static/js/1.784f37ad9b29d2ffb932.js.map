{"version":3,"sources":["webpack:///./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/_for-each@0.3.3@for-each/index.js","webpack:///./node_modules/_es-abstract@1.13.0@es-abstract/helpers/isNaN.js","webpack:///./node_modules/_es-abstract@1.13.0@es-abstract/GetIntrinsic.js","webpack:///./node_modules/_es-abstract@1.13.0@es-abstract/helpers/assertRecord.js","webpack:///./node_modules/_video.js@6.12.1@video.js/dist/video.cjs.js","webpack:///./node_modules/_es-abstract@1.13.0@es-abstract/helpers/isFinite.js","webpack:///./node_modules/_define-properties@1.1.3@define-properties/index.js","webpack:///./node_modules/_is-function@1.0.1@is-function/index.js","webpack:///./node_modules/_es-to-primitive@1.2.0@es-to-primitive/helpers/isPrimitive.js","webpack:///./node_modules/_vue-video-player@5.0.2@vue-video-player/dist/vue-video-player.js","webpack:///./node_modules/_es-abstract@1.13.0@es-abstract/es5.js","webpack:///./node_modules/_function-bind@1.1.1@function-bind/implementation.js","webpack:///./node_modules/_xhr@2.4.0@xhr/index.js","webpack:///src/pages/components-demo/videoPlayer/index.vue","webpack:///./src/pages/components-demo/videoPlayer/index.vue?8e4e","webpack:///./src/pages/components-demo/videoPlayer/index.vue","webpack:///./node_modules/_is-callable@1.1.4@is-callable/index.js","webpack:///./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/_safe-json-parse@4.0.0@safe-json-parse/tuple.js","webpack:///./node_modules/_object-keys@1.1.1@object-keys/isArguments.js","webpack:///./node_modules/_string.prototype.trim@1.2.0@string.prototype.trim/index.js","webpack:///./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/_global@4.3.2@global/window.js","webpack:///./node_modules/_string.prototype.trim@1.2.0@string.prototype.trim/shim.js","webpack:///./node_modules/_parse-headers@2.0.2@parse-headers/parse-headers.js","webpack:///./node_modules/_es-to-primitive@1.2.0@es-to-primitive/es5.js","webpack:///./node_modules/_global@4.3.2@global/document.js","webpack:///./node_modules/_global@4.4.0@global/window.js","webpack:///./node_modules/_function-bind@1.1.1@function-bind/index.js","webpack:///./node_modules/_object-keys@1.1.1@object-keys/implementation.js","webpack:///./node_modules/_es-abstract@1.13.0@es-abstract/helpers/mod.js","webpack:///./node_modules/_string.prototype.trim@1.2.0@string.prototype.trim/implementation.js","webpack:///./node_modules/_tsml@1.0.1@tsml/tsml.js","webpack:///./node_modules/_object-keys@1.1.1@object-keys/index.js","webpack:///./node_modules/_xtend@4.0.2@xtend/immutable.js","webpack:///./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/_has@1.0.3@has/src/index.js","webpack:///./node_modules/_string.prototype.trim@1.2.0@string.prototype.trim/polyfill.js","webpack:///./node_modules/_es-abstract@1.13.0@es-abstract/helpers/sign.js"],"names":["scrollSetting","","up","isValidPercentValue","value","module","exports","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","Object","defineProperties","this","width","enumerable","get","set","Error","lines","TypeError","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","scroll","setting","toLowerCase","findScrollSetting","SyntaxError","isCallable","__webpack_require__","toStr","prototype","toString","hasOwnProperty","list","iterator","thisArg","receiver","arguments","length","call","array","i","len","forEachArray","string","charAt","forEachString","object","k","forEachObject","Number","isNaN","a","ThrowTypeError","getOwnPropertyDescriptor","hasSymbols","Symbol","getProto","getPrototypeOf","x","__proto__","asyncGenIterator","undefined","TypedArray","Uint8Array","INTRINSICS","$ %Array%","Array","$ %ArrayBuffer%","ArrayBuffer","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","entries","$ %ArrayProto_forEach%","forEach","$ %ArrayProto_keys%","keys","$ %ArrayProto_values%","values","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","Boolean","$ %BooleanPrototype%","$ %DataView%","DataView","$ %DataViewPrototype%","$ %Date%","Date","$ %DatePrototype%","$ %decodeURI%","decodeURI","$ %decodeURIComponent%","decodeURIComponent","$ %encodeURI%","encodeURI","$ %encodeURIComponent%","encodeURIComponent","$ %Error%","$ %ErrorPrototype%","$ %eval%","eval","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","Float32Array","$ %Float32ArrayPrototype%","$ %Float64Array%","Float64Array","$ %Float64ArrayPrototype%","$ %Function%","Function","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","Int32Array","$ %Int32ArrayPrototype%","$ %isFinite%","isFinite","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","JSON","$ %JSONParse%","parse","$ %Map%","Map","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","Math","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","valueOf","$ %parseFloat%","parseFloat","$ %parseInt%","parseInt","$ %Promise%","Promise","$ %PromisePrototype%","$ %PromiseProto_then%","then","$ %Promise_all%","all","$ %Promise_reject%","reject","$ %Promise_resolve%","resolve","$ %Proxy%","Proxy","$ %RangeError%","RangeError","$ %RangeErrorPrototype%","$ %ReferenceError%","ReferenceError","$ %ReferenceErrorPrototype%","$ %Reflect%","Reflect","$ %RegExp%","RegExp","$ %RegExpPrototype%","$ %Set%","Set","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","String","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","Uint8ClampedArray","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","Uint16Array","$ %Uint16ArrayPrototype%","$ %Uint32Array%","Uint32Array","$ %Uint32ArrayPrototype%","$ %URIError%","URIError","$ %URIErrorPrototype%","$ %WeakMap%","WeakMap","$ %WeakMapPrototype%","$ %WeakSet%","WeakSet","$ %WeakSetPrototype%","name","allowMissing","key","GetIntrinsic","$TypeError","$SyntaxError","has","predicates","Property Descriptor","ES","Desc","Type","allowed","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","isData","IsAccessor","recordType","argumentName","predicate","console","log","_interopDefault","ex","match","window","document","tsml","safeParseTuple","xhr","vtt","version","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","pop","IS_IPAD","test","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_OLD_ANDROID","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IS_IE8","IE_VERSION","result","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","isReal","maxTouchPoints","DocumentTouch","BACKGROUND_SIZE_SUPPORTED","createElement","style","browser","freeze","_typeof","obj","constructor","classCallCheck","instance","Constructor","inherits","subClass","superClass","create","writable","configurable","setPrototypeOf","possibleConstructorReturn","self","taggedTemplateLiteralLoose","strings","raw","isObject","each","fn","assign","target","_len","sources","_key","apply","concat","source","isPlain","level","history","logByType","type","args","stringify","lvl","levels","lvlRegExp","unshift","toUpperCase","push","info","map","isArray","join","off","debug","warn","error","DEFAULT","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","computedStyle","el","prop","getComputedStyle","cs","currentStyle","_templateObject","isNonBlankString","str","throwIfWhitespace","isEl","nodeType","isInFrame","parent","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","getOwnPropertyNames","propName","val","indexOf","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","trim","removeClass","classToRemove","remove","split","filter","c","toggleClass","classToToggle","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","height","findPosition","box","left","top","docEl","documentElement","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","round","getPointerPosition","event","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","y","max","min","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","getTime","getData","id","hasData","removeData","e","_cleanUpEvents","elem","data","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","opts","defineProperty","addEventListener","passiveEvents","on","guid","hash","handlersCopy","slice","m","n","options","passive","attachEvent","removeType","t","splice","trigger","elemData","ownerDocument","bubbles","targetData","one","func","Events","_windowLoaded","videojs$2","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","_i","_e","_i2","_e2","_i3","_e3","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","readyState","createStyleElement","setTextContent","styleSheet","cssText","bind","uid","bound","throttle","last","now","debounce","immediate","timeout","_later","clearTimeout","EventTarget","allowedEvents_","ael","dispatchEvent","isEvented","eventBusEl_","every","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_this","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","mergeOptions","Component","ready","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","dispose","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","replace","index","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","workingChildren","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","couldBeTap","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","start","end","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","MediaError","message","defaultMessages","status","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","track","reduce","acc","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","json","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","handleKeyPress","close","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","_prop","changing_","disableOthers$1","selected","VideoTrackList","TextTrackList","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","url","props","href","addToBody","host","protocol","div","innerHTML","details","location","getAbsoluteURL","getFileExtension","path","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","uri","crossOrigin","cors","err","response","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","settings","srclang","mode","default_","tt","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","onload","onerror","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","videojs","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","aac","oga","m3u8","getMimetype","ext","fixSource","mimetype","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","fallbackImg_","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","toggleDisplay","preselectTrack","modes","trackList","userPref","cache_","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","s","floor","h","gm","gh","Infinity","implementation","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","item","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","title","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","default","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$2","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","eventName","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","mp4RE","patchCanPlayType","unpatchCanPlayType","r","_templateObject$1","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","promise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateCache","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","set$1","reduceRight","get$1","PromiseClass","play_","_this8","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this9","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","b","_this10","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this11","sourceTech","currentSources","currentSource","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3$track","toJSON","createModal","_this12","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","p","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","HTMLVideoElement","normalizeId","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","$isNaN","origDefineProperty","supportsDescriptors","_","arePropertyDescriptorsSupported","getOwnPropertySymbols","alert","confirm","prompt","d","__esModule","customEventName","required","events","globalOptions","progressControl","fullscreenToggle","volumeMenuButton","globalEvents","reseted","mounted","initialize","beforeDestroy","$refs","$emit","__ob__","$nextTick","watch","deep","install","videoPlayer","u","render","staticRenderFns","_compiled","functional","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","f","beforeCreate","_injectStyles","esModule","$createElement","_self","_c","staticClass","ref","$Object","$String","assertRecord","$isFinite","mod","IsCallable","toPrimitive","ES5","ToPrimitive","ToBoolean","ToNumber","ToInteger","number","abs","ToInt32","ToUint32","ToUint16","posInt","ToString","ToObject","CheckObjectCoercible","optMessage","SameValue","IsPropertyDescriptor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","ToPropertyDescriptor","Obj","getter","setter","that","boundLength","boundArgs","Empty","isFunction","parseHeaders","xtend","initParams","params","createXHR","_createXHR","called","errorFunc","evt","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","useXDR","responseText","responseType","responseXML","firefoxBugTakenEffect","getXml","isJson","getBody","headers","rawRequest","getAllResponseHeaders","XDomainRequest","XMLHttpRequest","onreadystatechange","onprogress","onabort","ontimeout","username","password","withCredentials","abort","setRequestHeader","isEmpty","beforeSend","send","components","vue_video_player","computed","onPlayerPlay","onPlayerPause","onPlayerEnded","onPlayerLoadeddata","onPlayerWaiting","onPlayerPlaying","onPlayerTimeupdate","onPlayerCanplay","onPlayerCanplaythrough","playerStateChanged","playerCurrentState","playerReadied","components_demo_videoPlayer","_vm","_h","_m","_v","$event","ended","waiting","loadeddata","timeupdate","statechanged","normalizeComponent","__webpack_exports__","fnToStr","constructorRegex","isES6ClassFn","fnStr","hasToStringTag","toStringTag","tryFunctionObject","strClass","autoKeyword","directionSetting","lr","rl","alignSetting","middle","findAlignSetting","cobj","isIE8","baseObj","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","findDirectionSetting","getCueAsHTML","convertCueToDOMTree","reviver","isArgs","callee","define","getPolyfill","shim","boundTrim","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","restore","global","win","polyfill","row","isPrimitive","ES5internalSlots","O","actualHint","input","doccy","topLevel","minDoc","keysShim","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","modulo","remain","leftWhitespace","rightWhitespace","S","clean","sa","origKeys","originalKeys","_objCreate","F","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","substr","region","alt","vals","vals0","integer","line","lineAlign","snapToLines","size","align","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","unescape","shouldAdd","current","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","currentRange","StyleBox","CueStyleBox","styleOptions","styles","display","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","direction","nodeStack","pushNodes","nextTextNode","charCodeAt","determineBidi","stylesunicodeBidi","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","count","computeLinePos","axis","step","maxPosition","initialAxis","ceil","reverse","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","b2","boxes","container","reference","getSimpleBoxPosition","decode","cuetext","overlay","paddedOverlay","margin","shouldCompute","decoder","buffer","TextDecoder","reportOrThrowError","collectNextLine","pos","parseHeader","ontimestampmap","MPEGTS","LOCAL","xy","anchor","onregion","parseRegion","stream","alreadyCollectedLine","hasSubstring"],"mappings":"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","file":"static/js/1.784f37ad9b29d2ffb932.js","sourcesContent":["/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/vttregion.js\n// module id = +pTH\n// module chunks = 1","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_for-each@0.3.3@for-each/index.js\n// module id = /Gra\n// module chunks = 1","module.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_es-abstract@1.13.0@es-abstract/helpers/isNaN.js\n// module id = 0219\n// module chunks = 1","'use strict';\n\n/* globals\n\tSet,\n\tMap,\n\tWeakSet,\n\tWeakMap,\n\n\tPromise,\n\n\tSymbol,\n\tProxy,\n\n\tAtomics,\n\tSharedArrayBuffer,\n\n\tArrayBuffer,\n\tDataView,\n\tUint8Array,\n\tFloat32Array,\n\tFloat64Array,\n\tInt8Array,\n\tInt16Array,\n\tInt32Array,\n\tUint8ClampedArray,\n\tUint16Array,\n\tUint32Array,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor\n\t? (function () { return Object.getOwnPropertyDescriptor(arguments, 'callee').get; }())\n\t: function () { throw new TypeError(); };\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar generator; // = function * () {};\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'$ %Array%': Array,\n\t'$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n\t'$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'$ %ArrayPrototype%': Array.prototype,\n\t'$ %ArrayProto_entries%': Array.prototype.entries,\n\t'$ %ArrayProto_forEach%': Array.prototype.forEach,\n\t'$ %ArrayProto_keys%': Array.prototype.keys,\n\t'$ %ArrayProto_values%': Array.prototype.values,\n\t'$ %AsyncFromSyncIteratorPrototype%': undefined,\n\t'$ %AsyncFunction%': asyncFunction,\n\t'$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n\t'$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n\t'$ %AsyncGeneratorFunction%': asyncGenFunction,\n\t'$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n\t'$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n\t'$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'$ %Boolean%': Boolean,\n\t'$ %BooleanPrototype%': Boolean.prototype,\n\t'$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n\t'$ %Date%': Date,\n\t'$ %DatePrototype%': Date.prototype,\n\t'$ %decodeURI%': decodeURI,\n\t'$ %decodeURIComponent%': decodeURIComponent,\n\t'$ %encodeURI%': encodeURI,\n\t'$ %encodeURIComponent%': encodeURIComponent,\n\t'$ %Error%': Error,\n\t'$ %ErrorPrototype%': Error.prototype,\n\t'$ %eval%': eval, // eslint-disable-line no-eval\n\t'$ %EvalError%': EvalError,\n\t'$ %EvalErrorPrototype%': EvalError.prototype,\n\t'$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n\t'$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n\t'$ %Function%': Function,\n\t'$ %FunctionPrototype%': Function.prototype,\n\t'$ %Generator%': generator ? getProto(generator()) : undefined,\n\t'$ %GeneratorFunction%': generatorFunction,\n\t'$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n\t'$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n\t'$ %isFinite%': isFinite,\n\t'$ %isNaN%': isNaN,\n\t'$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'$ %JSON%': JSON,\n\t'$ %JSONParse%': JSON.parse,\n\t'$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n\t'$ %Math%': Math,\n\t'$ %Number%': Number,\n\t'$ %NumberPrototype%': Number.prototype,\n\t'$ %Object%': Object,\n\t'$ %ObjectPrototype%': Object.prototype,\n\t'$ %ObjProto_toString%': Object.prototype.toString,\n\t'$ %ObjProto_valueOf%': Object.prototype.valueOf,\n\t'$ %parseFloat%': parseFloat,\n\t'$ %parseInt%': parseInt,\n\t'$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n\t'$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n\t'$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n\t'$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n\t'$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n\t'$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'$ %RangeError%': RangeError,\n\t'$ %RangeErrorPrototype%': RangeError.prototype,\n\t'$ %ReferenceError%': ReferenceError,\n\t'$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n\t'$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'$ %RegExp%': RegExp,\n\t'$ %RegExpPrototype%': RegExp.prototype,\n\t'$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n\t'$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n\t'$ %String%': String,\n\t'$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'$ %StringPrototype%': String.prototype,\n\t'$ %Symbol%': hasSymbols ? Symbol : undefined,\n\t'$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n\t'$ %SyntaxError%': SyntaxError,\n\t'$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n\t'$ %ThrowTypeError%': ThrowTypeError,\n\t'$ %TypedArray%': TypedArray,\n\t'$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n\t'$ %TypeError%': TypeError,\n\t'$ %TypeErrorPrototype%': TypeError.prototype,\n\t'$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n\t'$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n\t'$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n\t'$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n\t'$ %URIError%': URIError,\n\t'$ %URIErrorPrototype%': URIError.prototype,\n\t'$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n\t'$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\t'$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar key = '$ ' + name;\n\tif (!(key in INTRINSICS)) {\n\t\tthrow new SyntaxError('intrinsic ' + name + ' does not exist!');\n\t}\n\n\t// istanbul ignore if // hopefully this is impossible to test :-)\n\tif (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n\t\tthrow new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t}\n\treturn INTRINSICS[key];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_es-abstract@1.13.0@es-abstract/GetIntrinsic.js\n// module id = 09P6\n// module chunks = 1","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar predicates = {\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n    if (ES.Type(Desc) !== 'Object') {\n      return false;\n    }\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) { // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n    return true;\n  }\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n  var predicate = predicates[recordType];\n  if (typeof predicate !== 'function') {\n    throw new $SyntaxError('unknown record type: ' + recordType);\n  }\n  if (!predicate(ES, value)) {\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\n  }\n  console.log(predicate(ES, value), value);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_es-abstract@1.13.0@es-abstract/helpers/assertRecord.js\n// module id = 09b1\n// module chunks = 1","/**\n * @license\n * Video.js 6.12.1 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar window = _interopDefault(require('global/window'));\nvar document = _interopDefault(require('global/document'));\nvar tsml = _interopDefault(require('tsml'));\nvar safeParseTuple = _interopDefault(require('safe-json-parse/tuple'));\nvar xhr = _interopDefault(require('xhr'));\nvar vtt = _interopDefault(require('videojs-vtt.js'));\n\nvar version = \"6.12.1\";\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window.navigator && window.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\n// Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser\nvar IS_OLD_ANDROID = IS_ANDROID && /webkit/i.test(USER_AGENT) && ANDROID_VERSION < 2.3;\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IS_IE8 = /MSIE\\s8\\.0/.test(USER_AGENT);\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch);\n\nvar BACKGROUND_SIZE_SUPPORTED = isReal() && 'backgroundSize' in window.document.createElement('video').style;\n\nvar browser = (Object.freeze || Object)({\n\tIS_IPAD: IS_IPAD,\n\tIS_IPHONE: IS_IPHONE,\n\tIS_IPOD: IS_IPOD,\n\tIS_IOS: IS_IOS,\n\tIOS_VERSION: IOS_VERSION,\n\tIS_ANDROID: IS_ANDROID,\n\tANDROID_VERSION: ANDROID_VERSION,\n\tIS_OLD_ANDROID: IS_OLD_ANDROID,\n\tIS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n\tIS_FIREFOX: IS_FIREFOX,\n\tIS_EDGE: IS_EDGE,\n\tIS_CHROME: IS_CHROME,\n\tCHROME_VERSION: CHROME_VERSION,\n\tIS_IE8: IS_IE8,\n\tIE_VERSION: IE_VERSION,\n\tIS_SAFARI: IS_SAFARI,\n\tIS_ANY_SAFARI: IS_ANY_SAFARI,\n\tTOUCH_ENABLED: TOUCH_ENABLED,\n\tBACKGROUND_SIZE_SUPPORTED: BACKGROUND_SIZE_SUPPORTED\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n *\n * @param  {boolean} [stringify]\n *         By default, only old IEs should get console argument stringification,\n *         but this is exposed as a parameter to facilitate testing.\n */\nvar logByType = function logByType(type, args) {\n  var stringify = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !!IE_VERSION && IE_VERSION < 11;\n\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window.console.info || window.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  // IEs previous to 11 log objects uselessly as \"[object Object]\"; so, JSONify\n  // objects and arrays for those less-capable browsers.\n  if (stringify) {\n    args = args.map(function (a) {\n      if (isObject(a) || Array.isArray(a)) {\n        try {\n          return JSON.stringify(a);\n        } catch (x) {\n          return String(a);\n        }\n      }\n\n      // Cast to string before joining, so we get null and undefined explicitly\n      // included in output (as we would in a modern console).\n      return String(a);\n    }).join(' ');\n  }\n\n  // Old IE versions do not allow .apply() for console methods (they are\n  // reported as objects rather than functions).\n  if (!fn.apply) {\n    fn(args);\n  } else {\n    fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n  }\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window.getComputedStyle === 'function') {\n    var cs = window.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return el.currentStyle[prop] || '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  return (\n\n    // Both document and window will never be undefined thanks to `global`.\n    document === window.document &&\n\n    // In IE < 9, DOM methods return \"object\" as their type, so all we can\n    // confidently check is that it exists.\n    typeof document.createElement !== 'undefined'\n  );\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window.parent !== window.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but older browsers\n  // won't know about HTML5 boolean attributes that we still read from\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (IE_VERSION === 9) {\n    // Ignore IE9\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\n\n\nvar Dom = (Object.freeze || Object)({\n\tisReal: isReal,\n\tisEl: isEl,\n\tisInFrame: isInFrame,\n\tcreateEl: createEl,\n\ttextContent: textContent,\n\tprependTo: prependTo,\n\thasClass: hasClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\ttoggleClass: toggleClass,\n\tsetAttributes: setAttributes,\n\tgetAttributes: getAttributes,\n\tgetAttribute: getAttribute,\n\tsetAttribute: setAttribute,\n\tremoveAttribute: removeAttribute,\n\tblockTextSelection: blockTextSelection,\n\tunblockTextSelection: unblockTextSelection,\n\tgetBoundingClientRect: getBoundingClientRect,\n\tfindPosition: findPosition,\n\tgetPointerPosition: getPointerPosition,\n\tisTextNode: isTextNode,\n\temptyEl: emptyEl,\n\tnormalizeContent: normalizeContent,\n\tappendContent: appendContent,\n\tinsertContent: insertContent,\n\tisSingleLeftClick: isSingleLeftClick,\n\t$: $,\n\t$$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = (Object.freeze || Object)({\n\tfixEvent: fixEvent,\n\ton: on,\n\toff: off,\n\ttrigger: trigger,\n\tone: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs$2 = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs$2.options.autoSetup === false) {\n    return;\n  }\n\n  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\n  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  // var mediaEls = vids.concat(audios);\n\n  // Because IE8 doesn't support calling slice on a node list, we need to loop\n  // through each list of elements to build up a new, combined list of elements.\n  var vids = document.getElementsByTagName('video');\n  var audios = document.getElementsByTagName('audio');\n  var divs = document.getElementsByTagName('video-js');\n  var mediaEls = [];\n\n  if (vids && vids.length > 0) {\n    for (var i = 0, e = vids.length; i < e; i++) {\n      mediaEls.push(vids[i]);\n    }\n  }\n\n  if (audios && audios.length > 0) {\n    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\n      mediaEls.push(audios[_i]);\n    }\n  }\n\n  if (divs && divs.length > 0) {\n    for (var _i2 = 0, _e2 = divs.length; _i2 < _e2; _i2++) {\n      mediaEls.push(divs[_i2]);\n    }\n  }\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var _i3 = 0, _e3 = mediaEls.length; _i3 < _e3; _i3++) {\n      var mediaEl = mediaEls[_i3];\n\n      // Check if element exists, has getAttribute func.\n      // IE seems to consider typeof el.getAttribute == 'object' instead of\n      // 'function' like expected, at least when loading the player immediately.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$2(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs$2 = vjs;\n  }\n\n  window.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window;\n\n  var timeout = void 0;\n\n  /* eslint-disable consistent-this */\n  return function () {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilites to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window.getComputedStyle === 'function') {\n      var computedStyle = window.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs on IE8 and wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The proprety that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @param {Object} [list]\n   *        The child object with inheritance done manually for ie8.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var _ret;\n\n    var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    if (!list) {\n      list = _this; // eslint-disable-line\n      if (IS_IE8) {\n        list = document.createElement('custom');\n        for (var prop in TrackList.prototype) {\n          if (prop !== 'constructor') {\n            list[prop] = TrackList.prototype[prop];\n          }\n        }\n      }\n    }\n\n    list.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      list.addTrack(tracks[i]);\n    }\n\n    // must return the object, as for ie8 it will not be this\n    // but a reference to a document object\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in AudioTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = AudioTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in VideoTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = VideoTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(list, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {TextTrack[]} [tracks=[]]\n   *        A list of `TextTrack` to instantiate the list with.\n   */\n  function TextTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TextTrackList);\n\n    var list = void 0;\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in TextTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = TextTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in HtmlTrackElementList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = HtmlTrackElementList.prototype[prop];\n        }\n      }\n    }\n\n    list.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      list.addTrackElement_(trackElements[i]);\n    }\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in TextTrackCueList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TextTrackCueList.prototype[prop];\n        }\n      }\n    }\n\n    TextTrackCueList.prototype.setCues_.call(list, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var track = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      track = document.createElement('custom');\n      for (var prop in Track.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = Track.prototype[prop];\n        }\n      }\n    }\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(track, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = (Object.freeze || Object)({\n\tparseUrl: parseUrl,\n\tgetAbsoluteURL: getAbsoluteURL,\n\tgetFileExtension: getFileExtension,\n\tisCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window.console && window.console.groupCollapsed) {\n      window.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window.console && window.console.groupEnd) {\n      window.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specifed url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings['default'];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var tt = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\n    tt.tech_ = settings.tech;\n\n    if (IS_IE8) {\n      for (var prop in TextTrack.prototype) {\n        if (prop !== 'constructor') {\n          tt[prop] = TextTrack.prototype[prop];\n        }\n      }\n    }\n\n    tt.cues_ = [];\n    tt.activeCues_ = [];\n\n    var cues = new TextTrackCueList(tt.cues_);\n    var activeCues = new TextTrackCueList(tt.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(tt, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      tt.tech_.ready(function () {\n        tt.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    /**\n     * @memberof TextTrack\n     * @member {boolean} default\n     *         If this track was set to be on or off by default. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n    Object.defineProperty(tt, 'default', {\n      get: function get$$1() {\n        return default_;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {string} mode\n     *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n     *         not be set if setting to an invalid mode.\n     * @instance\n     *\n     * @fires TextTrack#modechange\n     */\n    Object.defineProperty(tt, 'mode', {\n      get: function get$$1() {\n        return mode;\n      },\n      set: function set$$1(newMode) {\n        var _this2 = this;\n\n        if (!TextTrackMode[newMode]) {\n          return;\n        }\n        mode = newMode;\n        if (mode === 'showing') {\n\n          this.tech_.ready(function () {\n            _this2.tech_.on('timeupdate', timeupdateHandler);\n          }, true);\n        }\n        /**\n         * An event that fires when mode changes on this track. This allows\n         * the TextTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec!\n         *\n         * @event TextTrack#modechange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('modechange');\n      }\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} cues\n     *         The text track cue list for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'cues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        return cues;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} activeCues\n     *         The list text track cues that are currently active for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'activeCues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        // nothing to do\n        if (this.cues.length === 0) {\n          return activeCues;\n        }\n\n        var ct = this.tech_.currentTime();\n        var active = [];\n\n        for (var i = 0, l = this.cues.length; i < l; i++) {\n          var cue = this.cues[i];\n\n          if (cue.startTime <= ct && cue.endTime >= ct) {\n            active.push(cue);\n          } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n            active.push(cue);\n          }\n        }\n\n        changed = false;\n\n        if (active.length !== this.activeCues_.length) {\n          changed = true;\n        } else {\n          for (var _i = 0; _i < active.length; _i++) {\n            if (this.activeCues_.indexOf(active[_i]) === -1) {\n              changed = true;\n            }\n          }\n        }\n\n        this.activeCues_ = active;\n        activeCues.setCues_(this.activeCues_);\n\n        return activeCues;\n      },\n\n\n      // /!\\ Keep this setter empty (see the timeupdate handler above)\n      set: function set$$1() {}\n    });\n\n    if (settings.src) {\n      tt.src = settings.src;\n      loadTrack(settings.src, tt);\n    } else {\n      tt.loaded_ = true;\n    }\n\n    return _ret = tt, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\n      cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var enabled = false;\n\n    if (IS_IE8) {\n      for (var prop in AudioTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = AudioTrack.prototype[prop];\n        }\n      }\n    }\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      track.enabled = settings.enabled;\n    }\n    track.loaded_ = true;\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var selected = false;\n\n    if (IS_IE8) {\n      for (var prop in VideoTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = VideoTrack.prototype[prop];\n        }\n      }\n    }\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      track.selected = settings.selected;\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n    var trackElement = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      trackElement = document.createElement('custom');\n\n      for (var prop in HTMLTrackElement.prototype) {\n        if (prop !== 'constructor') {\n          trackElement[prop] = HTMLTrackElement.prototype[prop];\n        }\n      }\n    }\n\n    var track = new TextTrack(options);\n\n    trackElement.kind = track.kind;\n    trackElement.src = track.src;\n    trackElement.srclang = track.language;\n    trackElement.label = track.label;\n    trackElement['default'] = track['default'];\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {HTMLTrackElement~ReadyState} readyState\n     *         The current ready state of the track element.\n     * @instance\n     */\n    Object.defineProperty(trackElement, 'readyState', {\n      get: function get$$1() {\n        return readyState;\n      }\n    });\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {TextTrack} track\n     *         The underlying TextTrack object.\n     * @instance\n     *\n     */\n    Object.defineProperty(trackElement, 'track', {\n      get: function get$$1() {\n        return track;\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      trackElement.trigger({\n        type: 'load',\n        target: trackElement\n      });\n    });\n\n    if (IS_IE8) {\n      var _ret;\n\n      return _ret = trackElement, possibleConstructorReturn(_this, _ret);\n    }\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks wether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requsted.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window && window.videojs && window.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating wether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source hander found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middlware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value stroe of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file button.js\n */\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dipose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    // To ensure the poster image resizes while maintaining its original aspect\n    // ratio, use a div with `background-size` when available. For browsers that\n    // do not support `background-size` (e.g. IE8), fall back on using a regular\n    // img element.\n    if (!BACKGROUND_SIZE_SUPPORTED) {\n      this.fallbackImg_ = createEl('img');\n      el.appendChild(this.fallbackImg_);\n    }\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    if (this.fallbackImg_) {\n      this.fallbackImg_.src = url;\n    } else {\n      var backgroundImage = '';\n\n      // Any falsey values should stay as an empty string, otherwise\n      // this will throw an extra error\n      if (url) {\n        backgroundImage = 'url(\"' + url + '\")';\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track['default']) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precendence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window.WebVTT === 'function') {\n      window.WebVTT.processCues(window, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link Texttrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window.WebVTT.processCues(window, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nvar formatTime = function (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n};\n\n/**\n * @file time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - postition.x for vertical `Slider`s\n   *         - postition.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessiblity\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessiblity\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n// Required children\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere and it logs an error on IE8\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an overide for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n// Required children\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    'default': 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config['default'] : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = {};\n\nif (!IS_IE8) {\n  innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n    get: function get() {\n      return this.cloneNode(true).innerHTML;\n    },\n    set: function set(v) {\n      // make a dummy node to use innerHTML on\n      var dummy = document.createElement(this.nodeName.toLowerCase());\n\n      // set innerHTML to the value provided\n      dummy.innerHTML = v;\n\n      // make a document fragment to hold the nodes from dummy\n      var docFrag = document.createDocumentFragment();\n\n      // copy all of the nodes created by the innerHTML on dummy\n      // to the document fragment\n      while (dummy.childNodes.length) {\n        docFrag.appendChild(dummy.childNodes[0]);\n      }\n\n      // remove content\n      this.innerText = '';\n\n      // now we add all of that html in one by appending the\n      // document fragment. This is how innerHTML does it.\n      window.Element.prototype.appendChild.call(this, docFrag);\n\n      // then return the result that innerHTML's setter would\n      return this.innerHTML;\n    }\n  });\n}\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell syncronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\nvar srcDescriptorPolyfill = {};\n\nif (!IS_IE8) {\n  srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n    get: function get() {\n      if (this.hasAttribute('src')) {\n        return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n      }\n\n      return '';\n    },\n    set: function set(v) {\n      window.Element.prototype.setAttribute.call(this, 'src', v);\n\n      return v;\n    }\n  });\n}\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * @file html5.js\n */\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SouceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this2 = this;\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var elTracks = _this2.el()[props.getterName];\n      var techTracks = _this2[props.getterName]();\n\n      if (!_this2['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n      var listeners = {\n        change: function change(e) {\n          techTracks.trigger({\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          });\n        },\n        addtrack: function addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack: function removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n      var removeOldTracks = function removeOldTracks() {\n        var removeTracks = [];\n\n        for (var i = 0; i < techTracks.length; i++) {\n          var found = false;\n\n          for (var j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n\n      Object.keys(listeners).forEach(function (eventName) {\n        var listener = listeners[eventName];\n\n        elTracks.addEventListener(eventName, listener);\n        _this2.on('dispose', function (e) {\n          return elTracks.removeEventListener(eventName, listener);\n        });\n      });\n\n      // Remove (native) tracks that are not used anymore\n      _this2.on('loadstart', removeOldTracks);\n      _this2.on('dispose', function (e) {\n        return _this2.off('loadstart', removeOldTracks);\n      });\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          'class': 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this3 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this3.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this3.el_.duration === Infinity) {\n            _this3.trigger('durationchange');\n          }\n          _this3.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The heigth of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this4 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this4.off('webkitbeginfullscreen', beginFn);\n      _this4.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window.navigator && window.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to intialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options['default']) {\n      htmlTrackElement['default'] = options['default'];\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window.performance && typeof window.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window.performance.now();\n    } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE9 with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overriden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  if (IS_IE8) {\n    return false;\n  }\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggred instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggred instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\nvar mp4RE = /^video\\/mp4/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n\n    // Override Android 2.2 and less canPlayType method which is broken\n  } else if (IS_OLD_ANDROID) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mp4RE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occured during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - Flase indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NEWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeigth` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @proprety {Tech~SourceObject} source\n *        The source object\n *\n * @proprety {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE9 on Windows 7 without MediaPlayer throws an error here\n  // https://github.com/videojs/video.js/issues/519\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n/**\n * @file player.js\n */\n// Subclasses Component\n// The following imports are used only to ensure that the corresponding modules\n// are always included in the video.js package. Importing the modules will\n// execute them and they will register themselves with video.js.\n// Import Html5 tech, at least for disposing the original video tag.\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n\n      // copy over properties from the video-js element\n      // ie8 doesn't support Object.keys nor hasOwnProperty\n      // on dom elements so we have to specify properties individually\n      ['autoplay', 'controls', 'crossOrigin', 'defaultMuted', 'defaultPlaybackRate', 'loop', 'muted', 'playbackRate', 'src', 'volume'].forEach(function (prop) {\n        if (typeof el[prop] !== 'undefined') {\n          tag[prop] = el[prop];\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // workaround so we don't totally break IE7\n      // http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7\n      if (attr === 'class') {\n        el.className += ' ' + attrs[attr];\n\n        if (divEmbed) {\n          tag.className += ' ' + attrs[attr];\n        }\n      } else {\n        el.setAttribute(attr, attrs[attr]);\n\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag, because IE doesn't hide them completely.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n\n    // Chrome and Safari both have issues with autoplay.\n    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n    // This fixes both issues. Need to wait for API, so it updates displays correctly\n    if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {\n      try {\n        // Chrome Fix. Fixed in Chrome v16.\n        delete this.tag.poster;\n      } catch (e) {\n        log$1('deleting tag.poster throws in some browsers', e);\n      }\n    }\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise['catch']) {\n        return;\n      }\n\n      return playPromise['catch'](function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise['catch']) {\n        promise['catch'](function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise['catch']) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    })['catch'](function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // if we are a blob url, don't update the source cache\n    // blob urls can arise when playback is done via Media Source Extension (MSE)\n    // such as m3u8 sources with @videojs/http-streaming (VHS)\n    if (/^blob:/.test(src)) {\n      return;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this5.updateSourceCaches_(_this5.techGet_('currentSrc'));\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    var PromiseClass = this.options_.Promise || window.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this7.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  };\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n\n\n  Player.prototype.play_ = function play_() {\n    var _this8 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : silencePromise;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this8.playWaitingForReady_ = false;\n        callback(_this8.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      callback(this.techGet_('play'));\n      return;\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this8.playOnLoadstart_ = null;\n        callback(_this8.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        wether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Inifity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is bufferred 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on intial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this9 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this9.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this10 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this10.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this10.cache_.sources = sources;\n      _this10.updateSourceCaches_(middlewareSource);\n\n      var err = _this10.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this10.src(sources.slice(1));\n        }\n\n        _this10.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this10.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this10.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this10.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates wether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this11 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this11.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false maens that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // ie8 just logs \"[object object]\" if you just log the error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the intial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the lanugage\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this12 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this12.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine wether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec)\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\nif (!IS_IE8) {\n  Player.prototype.options_.children.push('resizeManager');\n}\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n// Include the built-in techs\n// HTML5 Element Shim for IE8\nif (typeof HTMLVideoElement === 'undefined' && isReal()) {\n  document.createElement('video');\n  document.createElement('audio');\n  document.createElement('track');\n  document.createElement('video-js');\n}\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs(id, options, ready) {\n  var player = videojs.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs.hooks = function (type, fn) {\n  videojs.hooks_[type] = videojs.hooks_[type] || [];\n  if (fn) {\n    videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n  }\n  return videojs.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hook = function (type, fn) {\n  videojs.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hookOnce = function (type, fn) {\n  videojs.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs.removeHook = function (type, fn) {\n  var index = videojs.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs.hooks_[type] = videojs.hooks_[type].slice();\n  videojs.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\n// Object.defineProperty is not available in IE8\nif (!IS_IE8 && Object.defineProperty) {\n  Object.defineProperty(videojs, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n} else {\n  videojs.middleware = { TERMINATOR: TERMINATOR };\n}\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deregister a Video.js plugin.\n *\n * @borrows plugin:deregisterPlugin as videojs.deregisterPlugin\n * @method deregisterPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be deregistered. Must be a string and\n *         must match an existing plugin or a method on the `Player`\n *         prototype.\n *\n */\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs.options.languages = mergeOptions(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs.url = Url;\n\nmodule.exports = videojs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_video.js@6.12.1@video.js/dist/video.cjs.js\n// module id = 1n34\n// module chunks = 1","var $isNaN = Number.isNaN || function (a) { return a !== a; };\n\nmodule.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_es-abstract@1.13.0@es-abstract/helpers/isFinite.js\n// module id = 30Mx\n// module chunks = 1","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_define-properties@1.1.3@define-properties/index.js\n// module id = 5dII\n// module chunks = 1","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_is-function@1.0.1@is-function/index.js\n// module id = B1+1\n// module chunks = 1","module.exports = function isPrimitive(value) {\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_es-to-primitive@1.2.0@es-to-primitive/helpers/isPrimitive.js\n// module id = Bt/q\n// module chunks = 1","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"video.js\")):\"function\"==typeof define&&define.amd?define([\"videojs\"],t):\"object\"==typeof exports?exports.VueVideoPlayer=t(require(\"video.js\")):e.VueVideoPlayer=t(e.videojs)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=3)}([function(t,n){t.exports=e},function(e,t,n){\"use strict\";function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(0),o=function(e){return e&&e.__esModule?e:{default:e}}(r),s=window.videojs||o.default;\"function\"!=typeof Object.assign&&Object.defineProperty(Object,\"assign\",{value:function(e,t){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(e),i=1;i<arguments.length;i++){var r=arguments[i];if(null!=r)for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n},writable:!0,configurable:!0});var a=[\"loadeddata\",\"canplay\",\"canplaythrough\",\"play\",\"pause\",\"waiting\",\"playing\",\"ended\",\"error\"];t.default={name:\"video-player\",props:{start:{type:Number,default:0},crossOrigin:{type:String,default:\"\"},playsinline:{type:Boolean,default:!1},customEventName:{type:String,default:\"statechanged\"},options:{type:Object,required:!0},events:{type:Array,default:function(){return[]}},globalOptions:{type:Object,default:function(){return{controls:!0,controlBar:{remainingTimeDisplay:!1,playToggle:{},progressControl:{},fullscreenToggle:{},volumeMenuButton:{inline:!1,vertical:!0}},techOrder:[\"html5\"],plugins:{}}}},globalEvents:{type:Array,default:function(){return[]}}},data:function(){return{player:null,reseted:!0}},mounted:function(){this.player||this.initialize()},beforeDestroy:function(){this.player&&this.dispose()},methods:{initialize:function(){var e=this,t=Object.assign({},this.globalOptions,this.options);this.playsinline&&(this.$refs.video.setAttribute(\"playsinline\",this.playsinline),this.$refs.video.setAttribute(\"webkit-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-video-player-type\",\"h5\"),this.$refs.video.setAttribute(\"x5-video-player-fullscreen\",!1)),\"\"!==this.crossOrigin&&(this.$refs.video.crossOrigin=this.crossOrigin,this.$refs.video.setAttribute(\"crossOrigin\",this.crossOrigin));var n=function(t,n){t&&e.$emit(t,e.player),n&&e.$emit(e.customEventName,i({},t,n))};t.plugins&&delete t.plugins.__ob__;var r=this;this.player=s(this.$refs.video,t,function(){for(var e=this,t=a.concat(r.events).concat(r.globalEvents),i={},o=0;o<t.length;o++)\"string\"==typeof t[o]&&void 0===i[t[o]]&&function(t){i[t]=null,e.on(t,function(){n(t,!0)})}(t[o]);this.on(\"timeupdate\",function(){n(\"timeupdate\",this.currentTime())}),r.$emit(\"ready\",this)})},dispose:function(e){var t=this;this.player&&this.player.dispose&&(\"Flash\"!==this.player.techName_&&this.player.pause&&this.player.pause(),this.player.dispose(),this.player=null,this.$nextTick(function(){t.reseted=!1,t.$nextTick(function(){t.reseted=!0,t.$nextTick(function(){e&&e()})})}))}},watch:{options:{deep:!0,handler:function(e,t){var n=this;this.dispose(function(){e&&e.sources&&e.sources.length&&n.initialize()})}}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(1),r=n.n(i);for(var o in i)[\"default\",\"default\"].indexOf(o)<0&&function(e){n.d(t,e,function(){return i[e]})}(o);var s=n(5),a=n(4),l=a(r.a,s.a,!1,null,null,null);t.default=l.exports},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=t.videoPlayer=t.videojs=void 0;var r=n(0),o=i(r),s=n(2),a=i(s),l=window.videojs||o.default,u=function(e,t){t&&(t.options&&(a.default.props.globalOptions.default=function(){return t.options}),t.events&&(a.default.props.globalEvents.default=function(){return t.events})),e.component(a.default.name,a.default)},d={videojs:l,videoPlayer:a.default,install:u};t.default=d,t.videojs=l,t.videoPlayer=a.default,t.install=u},function(e,t){e.exports=function(e,t,n,i,r,o){var s,a=e=e||{},l=typeof e.default;\"object\"!==l&&\"function\"!==l||(s=e,a=e.default);var u=\"function\"==typeof a?a.options:a;t&&(u.render=t.render,u.staticRenderFns=t.staticRenderFns,u._compiled=!0),n&&(u.functional=!0),r&&(u._scopeId=r);var d;if(o?(d=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},u._ssrRegister=d):i&&(d=i),d){var c=u.functional,f=c?u.render:u.beforeCreate;c?(u._injectStyles=d,u.render=function(e,t){return d.call(t),f(e,t)}):u.beforeCreate=f?[].concat(f,d):[d]}return{esModule:s,exports:a,options:u}}},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.reseted?n(\"div\",{staticClass:\"video-player\"},[n(\"video\",{ref:\"video\",staticClass:\"video-js\"})]):e._e()},r=[],o={render:i,staticRenderFns:r};t.a=o}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-video-player@5.0.2@vue-video-player/dist/vue-video-player.js\n// module id = CRWL\n// module chunks = 1","'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has');\n\n// https://es5.github.io/#x9\nvar ES5 = {\n\tToPrimitive: toPrimitive,\n\n\tToBoolean: function ToBoolean(value) {\n\t\treturn !!value;\n\t},\n\tToNumber: function ToNumber(value) {\n\t\treturn +value; // eslint-disable-line no-implicit-coercion\n\t},\n\tToInteger: function ToInteger(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number)) { return 0; }\n\t\tif (number === 0 || !$isFinite(number)) { return number; }\n\t\treturn sign(number) * Math.floor(Math.abs(number));\n\t},\n\tToInt32: function ToInt32(x) {\n\t\treturn this.ToNumber(x) >> 0;\n\t},\n\tToUint32: function ToUint32(x) {\n\t\treturn this.ToNumber(x) >>> 0;\n\t},\n\tToUint16: function ToUint16(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\n\t\treturn mod(posInt, 0x10000);\n\t},\n\tToString: function ToString(value) {\n\t\treturn $String(value);\n\t},\n\tToObject: function ToObject(value) {\n\t\tthis.CheckObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\tCheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n\t\t/* jshint eqnull:true */\n\t\tif (value == null) {\n\t\t\tthrow new $TypeError(optMessage || 'Cannot call method on ' + value);\n\t\t}\n\t\treturn value;\n\t},\n\tIsCallable: IsCallable,\n\tSameValue: function SameValue(x, y) {\n\t\tif (x === y) { // 0 === -0, but they are not identical.\n\t\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\t\treturn true;\n\t\t}\n\t\treturn $isNaN(x) && $isNaN(y);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-8\n\tType: function Type(x) {\n\t\tif (x === null) {\n\t\t\treturn 'Null';\n\t\t}\n\t\tif (typeof x === 'undefined') {\n\t\t\treturn 'Undefined';\n\t\t}\n\t\tif (typeof x === 'function' || typeof x === 'object') {\n\t\t\treturn 'Object';\n\t\t}\n\t\tif (typeof x === 'number') {\n\t\t\treturn 'Number';\n\t\t}\n\t\tif (typeof x === 'boolean') {\n\t\t\treturn 'Boolean';\n\t\t}\n\t\tif (typeof x === 'string') {\n\t\t\treturn 'String';\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n\tIsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n\t\tif (this.Type(Desc) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tvar allowed = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Get]]': true,\n\t\t\t'[[Set]]': true,\n\t\t\t'[[Value]]': true,\n\t\t\t'[[Writable]]': true\n\t\t};\n\n\t\tfor (var key in Desc) { // eslint-disable-line\n\t\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar isData = has(Desc, '[[Value]]');\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\t\tif (isData && IsAccessor) {\n\t\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n\tIsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n\tIsDataDescriptor: function IsDataDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n\tIsGenericDescriptor: function IsGenericDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn Desc;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (this.IsDataDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tvalue: Desc['[[Value]]'],\n\t\t\t\twritable: !!Desc['[[Writable]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else if (this.IsAccessorDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tget: Desc['[[Get]]'],\n\t\t\t\tset: Desc['[[Set]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n\tToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n\t\tif (this.Type(Obj) !== 'Object') {\n\t\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t\t}\n\n\t\tvar desc = {};\n\t\tif (has(Obj, 'enumerable')) {\n\t\t\tdesc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n\t\t}\n\t\tif (has(Obj, 'configurable')) {\n\t\t\tdesc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n\t\t}\n\t\tif (has(Obj, 'value')) {\n\t\t\tdesc['[[Value]]'] = Obj.value;\n\t\t}\n\t\tif (has(Obj, 'writable')) {\n\t\t\tdesc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n\t\t}\n\t\tif (has(Obj, 'get')) {\n\t\t\tvar getter = Obj.get;\n\t\t\tif (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n\t\t\t\tthrow new TypeError('getter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Get]]'] = getter;\n\t\t}\n\t\tif (has(Obj, 'set')) {\n\t\t\tvar setter = Obj.set;\n\t\t\tif (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n\t\t\t\tthrow new $TypeError('setter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Set]]'] = setter;\n\t\t}\n\n\t\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n\t\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t\t}\n\t\treturn desc;\n\t}\n};\n\nmodule.exports = ES5;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_es-abstract@1.13.0@es-abstract/es5.js\n// module id = D2Oo\n// module chunks = 1","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_function-bind@1.1.1@function-bind/implementation.js\n// module id = FSlE\n// module chunks = 1","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_xhr@2.4.0@xhr/index.js\n// module id = H0Gi\n// module chunks = 1","<template>\r\n    <div class=\"video-player p20\">\r\n        <code><a class=\"link-type\" href=\"https://github.com/surmon-china/vue-video-player\">Vue-Video-Player</a> 适用于 Vue 的 video.js 播放器组件。</code>\r\n        <video-player  class=\"video-player-box\"\r\n                        ref=\"videoPlayer\"\r\n                        :options=\"playerOptions\"\r\n                        :playsinline=\"true\"\r\n                        customEventName=\"customstatechangedeventname\"\r\n                        @play=\"onPlayerPlay($event)\"\r\n                        @pause=\"onPlayerPause($event)\"\r\n                        @ended=\"onPlayerEnded($event)\"\r\n                        @waiting=\"onPlayerWaiting($event)\"\r\n                        @playing=\"onPlayerPlaying($event)\"\r\n                        @loadeddata=\"onPlayerLoadeddata($event)\"\r\n                        @timeupdate=\"onPlayerTimeupdate($event)\"\r\n                        @canplay=\"onPlayerCanplay($event)\"\r\n                        @canplaythrough=\"onPlayerCanplaythrough($event)\"\r\n\r\n                        @statechanged=\"playerStateChanged($event)\"\r\n                        @ready=\"playerReadied\">\r\n        </video-player>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'video.js/dist/video-js.css'\r\nimport { videoPlayer } from 'vue-video-player'\r\n\r\nexport default {\r\n    components: {\r\n        videoPlayer\r\n    },\r\n    data() {\r\n      return {\r\n        // videojs options\r\n        playerOptions: {\r\n          height: '360',\r\n          autoplay: false,\r\n          muted: true,\r\n          language: 'en',\r\n          playbackRates: [0.7, 1.0, 1.5, 2.0],\r\n          sources: [{\r\n            type: \"video/mp4\",\r\n            // mp4\r\n            src: \"http://vjs.zencdn.net/v/oceans.mp4\",\r\n            // webm\r\n            // src: \"https://cdn.theguardian.tv/webM/2015/07/20/150716YesMen_synd_768k_vp8.webm\"\r\n          }],\r\n          poster: \"https://surmon-china.github.io/vue-quill-editor/static/images/surmon-1.jpg\",\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      // console.log('this is current player instance object', this.player)\r\n      setTimeout(() => {\r\n        console.log('dynamic change options', this.player)\r\n        this.player.muted(false)\r\n      }, 5000)\r\n    },\r\n    computed: {\r\n      player() {\r\n        return this.$refs.videoPlayer.player\r\n      }\r\n    },\r\n    methods: {\r\n      // listen event\r\n      onPlayerPlay(player) {\r\n        // console.log('player play!', player)\r\n      },\r\n      onPlayerPause(player) {\r\n        // console.log('player pause!', player)\r\n      },\r\n      onPlayerEnded(player) {\r\n        // console.log('player ended!', player)\r\n      },\r\n      onPlayerLoadeddata(player) {\r\n        // console.log('player Loadeddata!', player)\r\n      },\r\n      onPlayerWaiting(player) {\r\n        // console.log('player Waiting!', player)\r\n      },\r\n      onPlayerPlaying(player) {\r\n        // console.log('player Playing!', player)\r\n      },\r\n      onPlayerTimeupdate(player) {\r\n        // console.log('player Timeupdate!', player.currentTime())\r\n      },\r\n      onPlayerCanplay(player) {\r\n        // console.log('player Canplay!', player)\r\n      },\r\n      onPlayerCanplaythrough(player) {\r\n        // console.log('player Canplaythrough!', player)\r\n      },\r\n      // or listen state event\r\n      playerStateChanged(playerCurrentState) {\r\n        // console.log('player current update state', playerCurrentState)\r\n      },\r\n      // player is ready\r\n      playerReadied(player) {\r\n        // seek to 10s\r\n        console.log('example player 1 readied', player)\r\n        player.currentTime(10)\r\n        // console.log('example 01: the player is readied', player)\r\n      }\r\n    }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n    .video-player-box{\r\n        height:400px;\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/components-demo/videoPlayer/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"video-player p20\"},[_vm._m(0),_vm._v(\" \"),_c('video-player',{ref:\"videoPlayer\",staticClass:\"video-player-box\",attrs:{\"options\":_vm.playerOptions,\"playsinline\":true,\"customEventName\":\"customstatechangedeventname\"},on:{\"play\":function($event){return _vm.onPlayerPlay($event)},\"pause\":function($event){return _vm.onPlayerPause($event)},\"ended\":function($event){return _vm.onPlayerEnded($event)},\"waiting\":function($event){return _vm.onPlayerWaiting($event)},\"playing\":function($event){return _vm.onPlayerPlaying($event)},\"loadeddata\":function($event){return _vm.onPlayerLoadeddata($event)},\"timeupdate\":function($event){return _vm.onPlayerTimeupdate($event)},\"canplay\":function($event){return _vm.onPlayerCanplay($event)},\"canplaythrough\":function($event){return _vm.onPlayerCanplaythrough($event)},\"statechanged\":function($event){return _vm.playerStateChanged($event)},\"ready\":_vm.playerReadied}})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('code',[_c('a',{staticClass:\"link-type\",attrs:{\"href\":\"https://github.com/surmon-china/vue-video-player\"}},[_vm._v(\"Vue-Video-Player\")]),_vm._v(\" 适用于 Vue 的 video.js 播放器组件。\")])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-602a2e25\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/pages/components-demo/videoPlayer/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-602a2e25\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-602a2e25\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-602a2e25\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/components-demo/videoPlayer/index.vue\n// module id = null\n// module chunks = ","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_is-callable@1.1.4@is-callable/index.js\n// module id = JupL\n// module chunks = 1","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": true,\n  \"lr\": true,\n  \"rl\": true\n};\nvar alignSetting = {\n  \"start\": true,\n  \"middle\": true,\n  \"end\": true,\n  \"left\": true,\n  \"right\": true\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction extend(obj) {\n  var i = 1;\n  for (; i < arguments.length; i++) {\n    var cobj = arguments[i];\n    for (var p in cobj) {\n      obj[p] = cobj[p];\n    }\n  }\n\n  return obj;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  var cue = this;\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var baseObj = {};\n\n  if (isIE8) {\n    cue = document.createElement('custom');\n  } else {\n    baseObj.enumerable = true;\n  }\n\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  cue.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperty(cue,\n    \"id\", extend({}, baseObj, {\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"pauseOnExit\", extend({}, baseObj, {\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"startTime\", extend({}, baseObj, {\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"endTime\", extend({}, baseObj, {\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"text\", extend({}, baseObj, {\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"region\", extend({}, baseObj, {\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"vertical\", extend({}, baseObj, {\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"snapToLines\", extend({}, baseObj, {\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"line\", extend({}, baseObj, {\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"lineAlign\", extend({}, baseObj, {\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"position\", extend({}, baseObj, {\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"positionAlign\", extend({}, baseObj, {\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"size\", extend({}, baseObj, {\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"align\", extend({}, baseObj, {\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  cue.displayState = undefined;\n\n  if (isIE8) {\n    return cue;\n  }\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/vttcue.js\n// module id = LH1D\n// module chunks = 1","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_safe-json-parse@4.0.0@safe-json-parse/tuple.js\n// module id = Lvi9\n// module chunks = 1","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_object-keys@1.1.1@object-keys/isArguments.js\n// module id = R8CW\n// module chunks = 1","'use strict';\n\nvar bind = require('function-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\n\ndefine(boundTrim, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundTrim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_string.prototype.trim@1.2.0@string.prototype.trim/index.js\n// module id = STmi\n// module chunks = 1","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/browser-index.js\n// module id = TBd/\n// module chunks = 1","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_global@4.3.2@global/window.js\n// module id = VBq3\n// module chunks = 1","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n\tvar polyfill = getPolyfill();\n\tdefine(String.prototype, { trim: polyfill }, {\n\t\ttrim: function testTrim() {\n\t\t\treturn String.prototype.trim !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_string.prototype.trim@1.2.0@string.prototype.trim/shim.js\n// module id = Vl9B\n// module chunks = 1","var trim = require('string.prototype.trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_parse-headers@2.0.2@parse-headers/parse-headers.js\n// module id = W93x\n// module chunks = 1","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable');\n\n// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\nvar ES5internalSlots = {\n\t'[[DefaultValue]]': function (O) {\n\t\tvar actualHint;\n\t\tif (arguments.length > 1) {\n\t\t\tactualHint = arguments[1];\n\t\t} else {\n\t\t\tactualHint = toStr.call(O) === '[object Date]' ? String : Number;\n\t\t}\n\n\t\tif (actualHint === String || actualHint === Number) {\n\t\t\tvar methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\t\t\tvar value, i;\n\t\t\tfor (i = 0; i < methods.length; ++i) {\n\t\t\t\tif (isCallable(O[methods[i]])) {\n\t\t\t\t\tvalue = O[methods[i]]();\n\t\t\t\t\tif (isPrimitive(value)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new TypeError('No default value');\n\t\t}\n\t\tthrow new TypeError('invalid [[DefaultValue]] hint supplied');\n\t}\n};\n\n// http://ecma-international.org/ecma-262/5.1/#sec-9.1\nmodule.exports = function ToPrimitive(input) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tif (arguments.length > 1) {\n\t\treturn ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n\t}\n\treturn ES5internalSlots['[[DefaultValue]]'](input);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_es-to-primitive@1.2.0@es-to-primitive/es5.js\n// module id = X5ym\n// module chunks = 1","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_global@4.3.2@global/document.js\n// module id = e3Mc\n// module chunks = 1","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_global@4.4.0@global/window.js\n// module id = e73Z\n// module chunks = 1","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_function-bind@1.1.1@function-bind/index.js\n// module id = g+ts\n// module chunks = 1","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_object-keys@1.1.1@object-keys/implementation.js\n// module id = iHtv\n// module chunks = 1","module.exports = function mod(number, modulo) {\n\tvar remain = number % modulo;\n\treturn Math.floor(remain >= 0 ? remain : remain + modulo);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_es-abstract@1.13.0@es-abstract/helpers/mod.js\n// module id = kY8s\n// module chunks = 1","'use strict';\n\nvar bind = require('function-bind');\nvar ES = require('es-abstract/es5');\nvar replace = bind.call(Function.call, String.prototype.replace);\n\n/* eslint-disable no-control-regex */\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n/* eslint-enable no-control-regex */\n\nmodule.exports = function trim() {\n\tvar S = ES.ToString(ES.CheckObjectCoercible(this));\n\treturn replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_string.prototype.trim@1.2.0@string.prototype.trim/implementation.js\n// module id = lMal\n// module chunks = 1","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_tsml@1.0.1@tsml/tsml.js\n// module id = qGBE\n// module chunks = 1","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_object-keys@1.1.1@object-keys/index.js\n// module id = u8HD\n// module chunks = 1","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_xtend@4.0.2@xtend/immutable.js\n// module id = uKUS\n// module chunks = 1","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var color = \"rgba(255, 255, 255, 1)\";\n  var backgroundColor = \"rgba(0, 0, 0, 0.8)\";\n\n  if (isIE8) {\n    color = \"rgb(255, 255, 255)\";\n    backgroundColor = \"rgb(0, 0, 0)\";\n  }\n\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: color,\n    backgroundColor: backgroundColor,\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\"\n  };\n\n  if (!isIE8) {\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\";\n    styles.unicodeBidi = \"plaintext\";\n  }\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  if (!isIE8) {\n    styles.direction = determineBidi(this.cueDiv);\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\".\n    stylesunicodeBidi =  \"plaintext\";\n  }\n\n  this.applyStyles(styles);\n\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n\n  if (isIE8 && !this.lineHeight) {\n    this.lineHeight = 13;\n  }\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/vtt.js\n// module id = wJKP\n// module chunks = 1","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_has@1.0.3@has/src/index.js\n// module id = xB8m\n// module chunks = 1","'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = '\\u200b';\n\nmodule.exports = function getPolyfill() {\n\tif (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n\t\treturn String.prototype.trim;\n\t}\n\treturn implementation;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_string.prototype.trim@1.2.0@string.prototype.trim/polyfill.js\n// module id = zwBz\n// module chunks = 1","module.exports = function sign(number) {\n\treturn number >= 0 ? 1 : -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_es-abstract@1.13.0@es-abstract/helpers/sign.js\n// module id = zwQp\n// module chunks = 1"],"sourceRoot":""}